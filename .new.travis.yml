language: python
install: gem install fpm



before_script:
# Download Arduino IDE
- curl -s http://arduino.googlecode.com/files/arduino-${ARDUINO_IDE_VERSION}-linux64.tgz | sudo tar xz -C /opt

# Download and install scripts to run arduino on travis
- git clone -q https://github.com/slimshadeey1/hwci-scripts ../hwci-scripts && ../hwci-scripts/bin/setup.sh

# Misc
- sudo apt-get install cppcheck

script:
#Set E variables and naming
- "   env USER_LIB_PATH=$PWD/../ ARDUINO_DIR=/opt/arduino-${ARDUINO_IDE_VERSION} ../hwci-scripts/bin/arduino_make.sh
  -C $ORGANIZATION && echo pass:$e >> results || echo fail:$e >> results "

# Complex stuff
- cat results
- 'cut -d: -f1 results | sort | uniq -c'
- test `grep -c fail results` -eq 0
env:
  global:
  - ARDUINO_IDE_VERSION='1.0.5'
  - VERSION_NUMBER="`cat package.json | grep version | grep -o '[0-9]\.[0-9]\.[0-9]\+'`"
  - BUILD_NUMBER=$TRAVIS_BUILD_NUMBER
  - REAL_GIT_BRANCH="`git for-each-ref --format='%(objectname) %(refname:short)' refs/heads | grep $TRAVIS_COMMIT | awk '{print $2}'`"

after_success:

- echo version_number $VERSION_NUMBER
- echo real_get_branch $REAL_GIT_BRANCH
- rm -rf $ORGANIZATION/build-*
- 'fpm -f -m $EMAIL -s dir -t deb -a armhf -n $ORGANIZATION-arduino-firmware -v $VERSION_NUMBER-$REAL_GIT_BRANCH.$BUILD_NUMBER.`git rev-parse --short HEAD` --description ''$ORGANIZATION Arduino Firmware'' .=/opt/$ORGANIZATION/arduino '
- mkdir build
- DEBFILE="`ls *.deb`"
- cp *.deb build/$ORGANIZATION-arduino-firmware_latest-${REAL_GIT_BRANCH}_armhf.deb
- mv *.deb build/

deploy:
 deploy:
  provider: releases
  api-key: $OAUTHKEY
  file: /Product/Bottomside_$TRAVIS_BUILD_NUMBER-$TRAVIS_COMMIT.zip
  skip_cleanup: true
  on:
    tags: true
    all_branches: true
    condition: "($REAL_GIT_BRANCH = master )||($REAL_GIT_BRANCH = pre-release )||($REAL_GIT_BRANCH = stable)"
after_deploy:
-
